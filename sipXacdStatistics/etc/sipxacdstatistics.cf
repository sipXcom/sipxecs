# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

#
# sipxacdstatistics configuration and process management
#
bundle agent sipxacdstatistics {
  methods:
    sipxacdstatistics::
      "any" usebundle => "sipxacdstatistics_config";
    any::
      "any" usebundle => "sipxacdstatistics_setup";
      "any" usebundle => "sipxacdstatistics_running";
}

bundle agent sipxacdstatistics_config {
  vars:
    any::
      "agent[CONFIG_SERVER_AGENT_PORT]" string => "$(sipx.CONFIG_SERVER_AGENT_PORT)";

  files:
    any::
      "$(sipx.SIPX_CONFDIR)/sipxconfig-report-config"
        comment => "installing ACD config $(this.promiser)",
        create => "true",
        perms => m("644"),
        edit_line => sipxacdstatistics_report_config;

      "$(sipx.SIPX_CONFDIR)/config-agent.properties"
        comment => "installing ACD config $(this.promiser)",
        create => "true",
        perms => m("644"),
        edit_line => set_variable_values("sipxacdstatistics_config.agent"),
        classes => if_repaired("restart_sipxacdstatistics");
}

bundle edit_line sipxacdstatistics_report_config {
  insert_lines:
    "$(sipx.SIPX_CFDATA)/$(sipx.location_id)/sipxconfig-report-config.part"
      insert_type => "file";
    "LOCATION_FQDN=\"$(sys.fqhost);\"";

  delete_lines:
    ".*";
}

bundle agent sipxacdstatistics_setup {
  vars:
    # script uses few resources so even every minute would be reasonable
    # time should be less than one-half the time window sipxconfig-agent keeps
    # around with is currently 90 minutes (although for the first 1000 events, it doesn't
    # matter and sipxconfig-agent will keep at least that many)
    "cron" string => "*/30 * * * * $(sipx.SIPXPBXUSER) $(sipx.SIPX_BINDIR)/sipxconfig-report > /dev/null";
    "cron_id" string => ".*/sipxconfig-report .*"; #regex

  methods:
    !src.sipxacdstatistics::
      "any" usebundle => rh_chkconfig_status("sipxacdstatistics on");
      "any" usebundle => add_crontab("$(cron_id)","$(cron)");

    !src.!sipxacdstatistics::
      "any" usebundle => rh_chkconfig_status("sipxacdstatistics off");
      "any" usebundle => remove_crontab("$(cron_id)");
}

bundle agent sipxacdstatistics_running {
  vars:
    any::
      "service_command" string => "$(sipx.SIPX_BINDIR)/sipxacd-stats";
      "service" string => "$(sipx.SIPX_SERVICEDIR)/sipxacd-stats-daemon";

  methods:
    any::
      "any" usebundle => find_sipxservice_by_command("$(service_command)","sipxacdstatistics_running");

  commands:
    (!sipxacdstatistics|stop_sipxecs).sipxacdstatistics_running::
      "$(service)"
        comment => "stop sipxacdstatistics",
        args => "stop";

    sipxacdstatistics.!sipxacdstatistics_running::
      "$(service)"
        comment => "start sipxacdstatistics",
        args => "start";

    sipxacdstatistics.sipxacdstatistics_running.(restart_sipxecs|restart_sipxacdstatistics)::
      "$(service)"
        comment => "restart sipxacdstatistics",
        args => "restart";
}

