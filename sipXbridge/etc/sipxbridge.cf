# Copyright (C) 2012 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

#
# sipXbridge configuration and process management
#
bundle agent sipxbridge {
  methods:
    sipxbridge::
      "any" usebundle => "sipxbridge_config";
    any::
      "any" usebundle => "sipxbridge_setup";
      "any" usebundle => "sipxbridge_running";
}

bundle agent sipxbridge_config {
  vars:
    any::
      "xml_file" slist => {
        "sipxbridge.xml",
        "peeridentities.xml"
      };

  files:
    any::
      "$(sipx.SIPX_CONFDIR)/$(xml_file)"
        comment => "install sipxbridge config $(this.promiser)",
        create => "true",
        perms => m("644"),
        copy_from => copy_from_cfdata("$(sipx.location_id)/$(xml_file)"),
        classes => if_repaired("restart_sipxbridge");
}

bundle agent sipxbridge_setup {
  methods:
    !src.sipxbridge::
      "any" usebundle => rh_chkconfig_status("sipxbridge on");
    !src.!sipxbridge::
      "any" usebundle => rh_chkconfig_status("sipxbridge off");
}

bundle agent sipxbridge_running {
  vars:
    any::
      "service_command" string => ".*\s-Dprocname=sipxbridge\s.*";

  methods:
    any::
      "any" usebundle => find_sipxservice_by_command_regex("$(service_command)","sipxbridge_running");

  commands:
    (!sipxbridge|stop_sipxecs).sipxbridge_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxbridge"
        comment => "stop sipxbridge",
        args => "stop";

    sipxbridge.!sipxbridge_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxbridge"
        comment => "start sipxbridge",
        args => "start";

    sipxbridge.sipxbridge_running.(restart_sipxecs|restart_sipxbridge)::
      "$(sipx.SIPX_SERVICEDIR)/sipxbridge"
        comment => "restart sipxbridge",
        args => "restart";
}
