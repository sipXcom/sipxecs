# Copyright (c) 2015 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

#
# Elasticsearch configuration for working with sipxecs
#

bundle agent elasticsearch {
  methods:
    fedora16_or_greater::
      "any" usebundle => "elasticsearch_systemctl_running";
    !fedora16_or_greater::
      "any" usebundle => "elasticsearch_sysv_running";
}

bundle agent elasticsearch_sysv_running {
  vars:
    any::
      "service" string => "/etc/init.d/elasticsearch";
      "service_command" string => "/usr/share/elasticsearch/bin/elasticsearch";

  methods:
    any::
      "any" usebundle => find_service_by_command("$(service_command)", "elasticsearch_running","root");
    !elasticsearch::
      "any" usebundle => rh_chkconfig_status("elasticsearch off");
    elasticsearch::
      "any" usebundle => rh_chkconfig_status("elasticsearch on");

  commands:
    (!elasticsearch|stop_sipxecs).elasticsearch_running::
      "$(service)"
        comment => "stop elasticsearch",
        args => "stop";

    elasticsearch.!elasticsearch_running::
      "$(service)"
        comment => "start elasticsearch",
        args => "start";

    elasticsearch.elasticsearch_running.reload_elasticsearch::
      "$(service)"
        comment => "restart elasticsearch",
        args => "restart";
}

bundle agent elasticsearch_systemctl_running {
  vars:
    any::
      "service" string => "elasticsearch.service";

  classes:
    fedora16_or_greater::
      "elasticsearch_running" expression => returnszero("$(sipx.systemctl) is-active $(service)","noshell");

  commands:
    (!elasticsearch|stop_sipxecs).elasticsearch_running::
      "$(sipx.systemctl)"
        comment => "stop elasticsearch",
        args => "stop $(service)";

      "$(sipx.systemctl)"
        comment => "disable elasticsearch",
        args => "disable $(service)";

    elasticsearch.!elasticsearch_running::
      "$(sipx.systemctl)"
        comment => "start elasticsearch",
        args => "start $(service)";

      "$(sipx.systemctl)"
        comment => "enable elasticsearch",
        args => "enable $(service)";

    elasticsearch.elasticsearch_running.(reload_elasticsearch|restart_elasticsearch)::
      "$(sipx.systemctl)"
        comment => "restart elasticsearch",
        args => "restart $(service)";
}