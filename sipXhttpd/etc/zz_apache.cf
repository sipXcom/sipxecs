# Copyright (C) 2012 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

#
# Postgres configuration for working with sipxecs
#

bundle agent zz_apache {
  methods:
    fedora16_or_greater::
      "any" usebundle => "apache_sysctl_running";
    !fedora16_or_greater::
      "any" usebundle => "apache_sysv_running";
}

bundle agent apache_sysv_running {
  vars:
    any::
      "service_command" string => "$(sipx.APACHE2_HTTPD)";

  methods:
    any::
      "any" usebundle => find_service_by_command("$(service_command)", "apache_running","$(sipx.APACHE2_USER)");
    apache::
      "any" usebundle => rh_chkconfig_status("httpd on");
    !apache::
      "any" usebundle => rh_chkconfig_status("httpd off");

  commands:
    !apache.apache_running::
      "/sbin/service"
        comment => "stop apache",
        args => "httpd stop";

    apache.!apache_running::
      "/sbin/service"
        comment => "start apache",
        args => "httpd start";

    apache.apache_running.restart_apache::
      "/sbin/service"
        comment => "restart apache",
        args => "httpd restart";
}

bundle agent apache_sysctl_running {
  vars:
    fedora16_or_greater::
      "service" string => "httpd.service";

  classes:
    "apache_running" expression => returnszero("$(sipx.systemctl) is-active $(service)","noshell");

  commands:
    !apache.apache_running::
      "$(sipx.systemctl)"
        comment => "stop apache",
        args => "stop $(service)";

      "$(sipx.systemctl)"
        comment => "disable apache",
        args => "disable $(service)";

    apache.!apache_running::
      "$(sipx.systemctl)"
        comment => "start apache",
        args => "start $(service)";

      "$(sipx.systemctl)"
        comment => "enable apache",
        args => "enable $(service)";

    apache.apache_running.restart_apache::
      "$(sipx.systemctl)"
        comment => "restart apache",
        args => "restart";
}