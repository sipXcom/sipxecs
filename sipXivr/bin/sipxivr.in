#!/bin/bash
# sipxivr - Startup script for sipxivr

# chkconfig: 35 85 15
# description: sipxivr is a SIP proxy for telecommunications
# processname: sipxivr

# Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the LGPL license.

. /etc/rc.d/init.d/functions || exit 1
. @SIPX_LIBEXECDIR@/sipx-utils.sh || exit 1

prog=sipxivr
pidfile="@SIPX_RUNDIR@/sipxivr.pid"

SslDir=@SIPX_CONFDIR@/ssl
AuthoritiesDir=$SslDir/authorities
KeyStorePassword=changeit
TrustStorePassword=changeit
KeyStoreOpts="\
      -Djavax.net.ssl.keyStore=$SslDir/ssl.keystore \
      -Djavax.net.ssl.keyStorePassword=$KeyStorePassword"

[ -e @SIPX_CONFDIR@/sysconfig/$prog ] && . @SIPX_CONFDIR@/sysconfig/$prog

setTruststoreOpts() {
    # List of authorities accepted system-wide
    if [ -d $AuthoritiesDir ]
    then
      TrustStore=$SslDir/authorities.jks
      TrustStoreOpts="\
	-Djavax.net.ssl.trustStore=$TrustStore \
	-Djavax.net.ssl.trustStoreType=JKS \
        -Djavax.net.ssl.trustStorePassword=$TrustStorePassword"
    else
      # make empty as extra measure to ensure doesn't come from env. var
      # this is when Java's CA database has required certs
      TrustStoreOpts=""
    fi
}

checkRunningInstance() {
  if [ -f "${pidfile}" ]; then
    pid=`cat ${pidfile}`
    if checkpid $pid 2>&1; then
      echo "Process $prog is already running with pid $pid"
      exit 1
    fi
  fi
}

start() {
    checkRunningInstance
    echo -n $"Starting $prog: "
    setTruststoreOpts

    JavaCmd=`@SIPX_BINDIR@/sipx-config --java`
    Dependencies=`@SIPX_BINDIR@/java-dep -d @SIPX_JAVADIR@/sipXcommons @ivr_PKGS@`
    export CLASSPATH=`echo @SIPX_CONFDIR@/sipxivr @SIPX_JAVADIR@/{sipXivr,sipXopenfire/plugins}/*.jar ${Dependencies} | sed -e 's/ /:/g'`
    X509Algorithm=`$JavaCmd org.sipfoundry.commons.x509selector.X509Selector`
    # procname is there so cfengine can find it
    Command="$JavaCmd \
      -Dprocname=sipxivr \
      -Dconf.dir=@SIPX_CONFDIR@ \
      -Dvar.dir=@SIPX_VARDIR@ \
      $TrustStoreOpts \
      $KeyStoreOpts \
      -Djetty.x509.algorithm=$X509Algorithm \
      -Djetty.ssl.password=$TrustStorePassword	\
      -Djetty.ssl.keypassword=$KeyStorePassword	\
      org.sipfoundry.sipxivr.SipXivr \
      $Args"
    runuser -s /bin/bash @SIPXPBXUSER@ -c "${Command}" >/dev/null 2>&1 &
    echo $! > ${pidfile}
    echo
}

stop() {
  echo -n $"Stopping sipxivr: "
  killproc -p "${pidfile}" -t30 -TERM "sipxivr"
  Status=$?
  echo
  [ $Status -eq 0 ] && rm -f "${pidfile}"
}

restart() {
  stop
  start
}

configtest() {
  sipx_config_exists @SIPX_CONFDIR@/sipxivr.properties 
  Status=$(($Status+$?))

  # check validity of xml files
  @bindir@/sipx-validate-xml @SIPX_CONFDIR@/autoattendants.xml
  Status=$(($Status+$?))

  # Check that the log file is writable.
  logfile="@SIPX_LOGDIR@/sipxivr.log"
  if [ -e $logfile -a ! -w $logfile ]
  then
      echo "Log file '$logfile' exists but is not writable." >&2
      Status=1
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f ${pidfile} ] && restart || :
    ;;
  status)
    status -p ${pidfile} java
    ;;
  configtest)
    configtest
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    Status=1
esac

exit $Status
