#!/bin/bash
#
# Copyright (C) 2010 eZuce Inc.
# Licensed by SIPfoundry under the LGPL license.
#
Action="START"
Status=0
# Required when controlled by supervisor or else openacd terminates if it doesn't detect "real" stdin
NoInput=""
# HOME is required for erlang apps and not set when run under sipXsupervisor
export HOME=`cd ~;pwd`

while [ $# -ne 0 ]
do
    case ${1} in
        --stop)
            Action=STOP
            ;;

	--noinput)
	    # only useful if you want to start OpenACD from CLI and you want a console at the same time
	    # to debug soemthing.  Ideally you should be able to attach but supervisor won't background
	    # processes that are already backgrounded
	    NoInput="-noinput"
	    ;;

        --configtest)
            Action=CONFIGTEST
            ;;

        *)
            echo "Warning, unknown args $1" 1>&2
            ;;
    esac

    shift # always consume 1
done

. @SIPX_LIBEXECDIR@/sipx-utils.sh || exit 1

pidfile=@SIPX_RUNDIR@/openacd.pid
# env var influences by openacd daemon script
export OPENACD_LOG_DIR=@SIPX_LOGDIR@/openacd
export OPENACD_RUN_DIR=@SIPX_VARDIR@/openacd
export OPENACD_ETC_DIR=@SIPX_CONFDIR@/openacd

case "$Action" in
	START)
	        test -d "$OPENACD_LOG_DIR" || mkdir -p "$OPENACD_LOG_DIR"
	        test -d "$OPENACD_RUN_DIR" || mkdir -p "$OPENACD_RUN_DIR"
		echo $$ > ${pidfile}
		    RUNNER_USER=@SIPXPBXUSER@ \
		    exec @OPENACD_DIR@/bin/openacd console $NoInput
		exit 0
		;;

	STOP)
		sipx_stop openacd $pidfile
		exit $?
		;;

	CONFIGTEST)
	        if /etc/init.d/mongod status 2>/dev/null | grep -q stopped; then 
		    echo 'Mongo database appears to be stopped. Please start mongod service' >&2
		    Status=1; 
		fi
		;;
esac

exit $Status
