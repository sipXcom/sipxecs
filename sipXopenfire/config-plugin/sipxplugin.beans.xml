<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-2.0.xsd">

  <bean id="openfireSipxXml" class="org.sipfoundry.sipxconfig.openfire.SipxOpenfireConfiguration">
    <property name="coreContext" ref="coreContext" />
    <property name="addressManager" ref="addressManager" />
    <property name="openfire" ref="openfire" />
    <property name="domainManager" ref="domainManager" />
    <property name="velocityEngine" ref="velocityEngine" />    
  </bean>

  <bean id="openfireXml" class="org.sipfoundry.sipxconfig.openfire.OpenfireConfigurationFile">
    <property name="velocityEngine" ref="velocityEngine" />
    <property name="ldapManager" ref="ldapManager" />
    <property name="coreContext" ref="coreContext" />
    <property name="localizationContext" ref="localizationContext" />
	<property name="properties">
		<map>
			<entry>
				<key>
					<value>provider.admin.className</value>
				</key>
				<value>org.jivesoftware.openfire.admin.DefaultAdminProvider</value>
			</entry>
			<entry>
				<key>
					<value>provider.connectionmgr.className</value>
				</key>
				<value>org.sipfoundry.openfire.connection.MongoConnMgrWrapper
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.connectivity.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoConnectivityProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.externalComponent.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoExternalComponentProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.group.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoGroupProviderAlt
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.groupprops.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoGroupPropertiesProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.lockout.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoLockOutProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.offline.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoOfflineMessageProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.presence.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoPresenceProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.privacylist.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoPrivacyListProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.privatestorage.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoPrivateStorageProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.pubsub.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoPubSubProvider</value>
			</entry>
			<entry>
				<key>
					<value>provider.remoteServer.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoRemoteServerProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.roster.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoRosterProvider</value>
			</entry>
			<entry>
				<key>
					<value>provider.securityAudit.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoSecurityAuditProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.uid.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoUIDProvider</value>
			</entry>
			<entry>
				<key>
					<value>provider.user.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoUserProviderAlt
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.userprops.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoUserPropertiesProvider
				</value>
			</entry>
			<entry>
				<key>
					<value>provider.vcard.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoVCardProvider</value>
			</entry>
		</map>
	</property>
	<property name="nonLdapProperties">
		<map>
			<entry>
				<key>
					<value>provider.auth.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.MongoAuthProvider</value>
			</entry>
		</map>
	</property>
	<property name="ldapProperties">
		<map>
			<entry>
				<key>
					<value>provider.auth.className</value>
				</key>
				<value>org.sipfoundry.openfire.provider.LdapMongoAuthProvider
				</value>
			</entry>
		</map>
	</property>
  </bean>

  <bean id="openfireConfiguration" class="org.sipfoundry.sipxconfig.openfire.OpenfireConfiguration">
    <property name="config" ref="openfireXml"/>
    <property name="sipxConfig" ref="openfireSipxXml"/>
    <property name="featureManager" ref="featureManager"/>
    <property name="openfire" ref="openfire"/>
  </bean>

  <bean id="openfireImpl" class="org.sipfoundry.sipxconfig.openfire.OpenfireImpl">
    <property name="settingsDao">
      <bean parent="beanWithSettingsDao">
        <property name="target">
          <bean parent="beanWithSettingsDaoImpl">
            <constructor-arg value="org.sipfoundry.sipxconfig.openfire.OpenfireSettings"/>
          </bean>
        </property>
      </bean>
    </property>
    <property name="configManager" ref="configManager"/>
  </bean>

  <bean id="openfire" class="org.springframework.aop.framework.ProxyFactoryBean" parent="abstractDao">
    <property name="target" ref="openfireImpl"/>
    <property name="proxyInterfaces" value="org.sipfoundry.sipxconfig.openfire.Openfire"/>
  </bean>

  <bean id="openfireSettings" class="org.sipfoundry.sipxconfig.openfire.OpenfireSettings"  parent="settingsBean">
    <property name="localizationContext" ref="localizationContext"/>
    <property name="modelFilesContext" ref="modelFilesContext"/>
    <property name="logDir" value="${openfire.home}/logs" />
  </bean>
  
  <bean id="openfireApiProvider" class="org.sipfoundry.sipxconfig.xmlrpc.XmlRpcApiProvider">
    <property name="methodNamePrefix" value="userAccountServer." />
    <property name="secure" value="false" />
    <property name="serviceInterface" value="org.sipfoundry.sipxconfig.openfire.OpenfireApi" />
  </bean>

  <bean id="imFeatureHook" class="org.sipfoundry.sipxconfig.web.plugin.IMFeatureHook" />
  
  <bean id="sipxOfRegistrarPlugin" class="org.sipfoundry.sipxconfig.registrar.RegistrarConfigurationPlugin">
    <property name="registrarPlugins">
      <map>
        <entry key="SIP_REDIRECT_HOOK_LIBRARY.900-PRESENCE" value="${sysdir.libdir}/libRedirectorPresenceRouting.so" />
      </map>
    </property>
    <property name="featureId" value="instantMessage"/>
  </bean>  
</beans>
