# Copyright (C) 2012 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

#
# sipxrecording configuration and process management
#
bundle agent sipxrecording {
  methods:
    sipxrecording::
      "any" usebundle => "sipxrecording_config";
    any::
      "any" usebundle => "sipxrecording_setup";
      "any" usebundle => "sipxrecording_running";
}

bundle agent sipxrecording_config {
  vars:
    any::
      "xml_file" slist => {
        "conferencebridge.xml"
      };
  files:
   any::
      "$(sipx.SIPX_CONFDIR)/$(xml_file)"
        comment => "install sipxrest config $(this.promiser)",
        create => "true",
        perms => m("644"),
        copy_from => copy_from_cfdata("$(sipx.location_id)/$(xml_file)"),
        classes => if_repaired("restart_sipxrecording");	  
    any::
      "$(sipx.SIPX_CONFDIR)/sipxrecording.properties"
        comment => "install sipxrecording config $(this.promiser)",
        create => "true",
        perms => m("644"),
        edit_line => sipxrecording_properties_contents,
        classes => if_repaired("restart_sipxrecording");
}

bundle edit_line sipxrecording_properties_contents {
  insert_lines:
    any::
      "$(sipx.SIPX_CFDATA)/$(sipx.location_id)/sipxrecording.properties.part"
        insert_type => "file";
      "recording.realm=$(sipx.realm)";
      "log.file=$(sipx.SIPX_LOGDIR)/sipxrecording.log";
      "recording.sipxchangeDomainName=$(sipx.domain)";
      "recording.docDirectory=$(sipx.wwwdir)/doc";     
  delete_lines:
    any::
      ".*";
}

bundle agent sipxrecording_setup {
  methods:
    !src.sipxrecording::
      "any" usebundle => rh_chkconfig_status("sipxrecording on");
    !src.!sipxrecording::
      "any" usebundle => rh_chkconfig_status("sipxrecording off");
}

bundle agent sipxrecording_running {
  vars:
    any::
      "service_command" string => ".*\s-Dprocname=sipxrecording\s.*";
  methods:
    any::
      "any" usebundle => find_sipxservice_by_command_regex("$(service_command)","sipxrecording_running");

  commands:
    !sipxrecording.sipxrecording_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxrecording"
        comment => "stop sipxrecording",
        args => "stop";

    sipxrecording.!sipxrecording_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxrecording"
        comment => "start sipxrecording",
        args => "start";

    sipxrecording.sipxrecording_running.(restart_sipxecs|restart_sipxrecording)::
      "$(sipx.SIPX_SERVICEDIR)/sipxrecording"
        comment => "restart sipxrecording",
        args => "restart";
}