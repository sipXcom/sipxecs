Name: @PACKAGE@
Version: @VERSION@
Release: %{?buildno:%buildno}%{!?buildno:1}

Summary: Conference Recording using FreeSwitch for sipX
License: LGPL
Group: Productivity/Telephony/SIP/Servers
Vendor: SIPfoundry
Packager: SIPfoundry <sipx-dev@sipfoundry.org>
Url: http://www.sipfoundry.org

BuildRequires: ant-commons-logging
BuildRequires: ant-junit
BuildRequires: ant-nodeps
BuildRequires: automake
BuildRequires: java-devel >= 1.6
BuildRequires: zip
BuildRequires: sipxcommons >= %version
BuildRequires: sipxopenfire >= %version
BuildRequires: asciidoc
%if %{_vendor} == suse
BuildRequires: docbook-xsl-stylesheets
%else
BuildRequires: docbook-style-xsl
%endif

Source: %name-%version.tar.gz

Obsoletes: sipxvxml

Requires: sipxcommserverlib >= %version
Requires: sipxcommons >= %version
Requires: sipxopenfire >= %version

%if %{?use_ibm_jvm}0
Requires: java-ibm >= 1.6
Requires: java-ibm-unrestricted
%endif

Prefix: %_prefix
BuildRoot: %{_tmppath}/%name-%version-root

%description
Conference Recording subystem that uses FreeSWITCH as a media server.

%prep
%setup -q

%build
%configure @SIPX_RPM_CONFIGURE_OPTIONS@
cp config.log %name.configlog
make all

%install

rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(644,root,root,755)
%attr(755,sipxchange,sipxchange) %{_datadir}/java/sipXecs/sipXrecording
%attr(644,root,root) %{_datadir}/sipxecs/process.d/sipxrecording-process.xml
%attr(644,root,root) %{_datadir}/sipxecs/schema/conferencebridge.xsd
%attr(755,sipxchange,sipxchange) %{_bindir}/sipxrecording.sh
%attr(755,sipxchange,sipxchange) %{_bindir}/sipxrecording-config
