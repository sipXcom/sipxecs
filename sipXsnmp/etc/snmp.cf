# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

#
# Postgres configuration for working with sipxecs
#

bundle agent snmp {
  methods:
    snmp::
      "any" usebundle => "snmp_config";
    fedora16_or_greater::
      "any" usebundle => "snmp_systemctl_running";
    !fedora16_or_greater::
      "any" usebundle => "snmp_sysv_running";
}

bundle agent snmp_config {
  files:
    snmp::
      "/etc/snmp/snmpd.conf"
        comment => "SNMP service settings, $(this.promiser)",
        create => "true",
        perms => m("644"),
        edit_defaults => empty,
        edit_line => snmpd_conf,
        classes => if_repaired("reload_snmp");

      "/etc/sysconfig/snmpd"
        comment => "SNMP service settings, $(this.promiser)",
        perms => m("644"),
        edit_defaults => empty,
        edit_line => insert_lines("OPTIONS=\"-A -Lf $(sipx.SIPX_LOGDIR)/snmpd.log -p /var/run/snmptrapd.pid\""),
        classes => if_repaired("reload_snmp");
}

bundle edit_line snmpd_conf {
  vars:
    "part" string => "$(sipx.SIPX_CFDATA)/$(sipx.location_id)/snmpd.conf.part";

  insert_lines:
    any::
"com2sec local  localhost  public
com2sec local  $(sipx.master_address) public
group   rwgroup v1           local
group   rwgroup v2c           local
view    all    included   .1  80
access  rwgroup \"\"      any       noauth    exact  all none none
syslocation Unknown
syscontact Root <root@localhost>
dontLogTCPWrappersConnects yes
createUser _internal
rwuser _internal
iquerySecName _internal
setEvent prFixIt prErrFix = 1
monitor -r 10 -e prFixIt \"procTable\" prErrorFlag != 0
";

   "$(part)"
     insert_type => "file",
     expand_scalars => "true";
}


bundle agent snmp_sysv_running {
  vars:
    any::
      "service" string => "/etc/init.d/snmpd";
      "service_command" string => "/usr/sbin/snmpd";

  methods:
    any::
      "any" usebundle => find_service_by_command("$(service_command)", "snmp_running","root");
    !snmp::
      "any" usebundle => rh_chkconfig_status("snmpd off");
    snmp::
      "any" usebundle => rh_chkconfig_status("snmpd on");

  commands:
    !snmp.snmp_running::
      "$(service)"
        comment => "stop snmp",
        args => "stop";

    snmp.!snmp_running::
      "$(service)"
        comment => "start snmp",
        args => "start";

    # reload (-HUP) seems to kill snmpd process and not
    # start it back up again. 
    snmp.snmp_running.reload_snmp::
      "$(service)"
        comment => "restart snmp",
        args => "restart";
}

bundle agent snmp_systemctl_running {
  vars:
    any::
      "service" string => "snmpd.service";

  classes:
    fedora16_or_greater::
      "snmp_running" expression => returnszero("$(sipx.systemctl) is-active $(service)","noshell");

  commands:
    !snmp.snmp_running::
      "$(sipx.systemctl)"
        comment => "stop snmpd",
        args => "stop $(service)";

      "$(sipx.systemctl)"
        comment => "disable snmpd",
        args => "disable $(service)";

    snmp.!snmp_running::
      "$(sipx.systemctl)"
        comment => "start snmpd",
        args => "start $(service)";

      "$(sipx.systemctl)"
        comment => "enable snmpd",
        args => "enable $(service)";

    # reload (-HUP) seems to kill snmpd process and not
    # start it back up again. 
    snmp.snmp_running.reload_snmp::
      "$(sipx.systemctl)"
        comment => "restart snmpd",
        args => "restart $(service)";
}

